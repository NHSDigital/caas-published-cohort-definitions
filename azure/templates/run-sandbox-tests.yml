parameters:
    - name: full
      type: boolean
      default: false
    - name: sandboxtest_command
      type: string
      default: "make sandboxtest"

steps:
    - template: "azure/components/aws-assume-role.yml@common"
      parameters:
          role: "auto-ops"
          profile: "apm_ptl"

    - template: "azure/components/get-aws-secrets-and-ssm-params.yml@common"
      parameters:
          secret_ids:
              - ptl/api-deployment/caas-published-cohort-definitions/INTEGRATION_API_KEY

    - bash: |
          make install-python
      workingDirectory: $(Pipeline.Workspace)/s/$(SERVICE_NAME)/$(SERVICE_ARTIFACT_NAME)
      displayName: Setup pytests
      condition: always()

    - bash: |
          make install-node
      workingDirectory: $(Pipeline.Workspace)/s/$(SERVICE_NAME)/$(SERVICE_ARTIFACT_NAME)
      displayName: Setup postman-tests
      condition: always()
    - bash: |
          npm run postman-test
      workingDirectory: $(Pipeline.Workspace)/s/$(SERVICE_NAME)/$(SERVICE_ARTIFACT_NAME)
      displayName: Run postman-tests
  - ${{ if parameters.full }}:
          - bash: |
                export PROXY_NAME="$(FULLY_QUALIFIED_SERVICE_NAME)"
                export APIGEE_ACCESS_TOKEN="$(secret.AccessToken)"
                export APIGEE_APP_ID="MY APP ID"
                export STATUS_ENDPOINT_API_KEY="$(STATUS_ENDPOINT_API_KEY)"
                export SOURCE_COMMIT_ID="$(Build.SourceVersion)"
                export INTEGRATION_API_KEY="$(INTEGRATION_API_KEY)"
                ${{ parameters.sandboxtest_command }}
            workingDirectory: $(Pipeline.Workspace)/s/$(SERVICE_NAME)/$(SERVICE_ARTIFACT_NAME)
            displayName: Run sandboxtests
          - task: PublishTestResults@2
            displayName: "Publish sandboxtest results"
            condition: always()
            inputs:
                testResultsFiles: "$(Pipeline.Workspace)/s/$(SERVICE_NAME)/$(SERVICE_ARTIFACT_NAME)/sandboxtest-report.xml"
                failTaskOnFailedTests: true
